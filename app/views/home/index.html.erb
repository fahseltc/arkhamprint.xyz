<%= render "partials/modals" %>

<p class="m-3">ArkhamPrint.XYZ is a tool to help players of the Arkham Horror LCG to print out proxy decks at home.</p>

<p class="m-3 pb-3">It uses <%= link_to "ArkhamDB", "https://arkhamdb.com", target: :_blank %> as the source of card images and can accept either a ArkhamDB decklist, or a list of individual card IDs.</p>

<nav>
  <div class=" nav nav-tabs" id="nav-tab" role="tablist">
    <button class="nav-link active" id="nav-deck-tab" data-bs-toggle="tab" data-bs-target="#nav-deck" type="button" role="tab" aria-controls="nav-deck" aria-selected="true">
      Deck URL
    </button>
    <button class="nav-link" id="nav-card-tab" data-bs-toggle="tab" data-bs-target="#nav-card" type="button" role="tab" aria-controls="nav-card" aria-selected="false">
      Individual Card IDs
    </button>
  </div>
</nav>
<div class="tab-content mx-auto" id="nav-tabContent">
  <div class="tab-pane fade show active p-3" id="nav-deck" role="tabpanel" aria-labelledby="nav-deck-tab">
    <label for="deck_url">ArkhamDB deck URL</label>
    <input type="text" class="form-control" id="deck_url" name="deck_url" placeholder="https://arkhamdb.com/decklist/view/48985">
    <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#byDeckUrlModal">
      Get PDF
    </button>
  </div>

  <div class="tab-pane fade p-3" id="nav-card" role="tabpanel" aria-labelledby="nav-card-tab">
    <label for="card_ids">ArkhamDB card ID's seperated by commas</label>
    <input type="text" class="form-control" id="card_ids" name="card_ids" placeholder="01022, 01044">
    <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#byCardIdModal">
      Get PDF
    </button>
  </div>
</div>

<script>
  function submitFromCardIdForm() {
    var input = $('#card_ids').val();
    input = input.replace(/ /g, "").split(',');
    console.log(input);
    var valid = validateCardIdArray(input);
    console.log("valid: " + valid);
    if (valid) {
      replaceContentsWithSpinner("byCardIdModalContent");
      const url = "/from_card_list?" + new URLSearchParams({
        card_ids: input
      });
      callPdfApi(url);
    } else {
      alert("Input list of card IDs is not valid")
    }
  }

  function validateCardIdArray(input) {
    for (const element of input) {
      console.log(element);
      if (!/\d/.test(element)) {
        return false;
      }
    };
    return true
  }

  async function callPdfApi(url) {
    try {
      fetch(url, {
          signal: AbortSignal.timeout(100000)
        })
        .then(res => res.blob())
        .then(blob => {
          var file = window.URL.createObjectURL(blob);
          window.open(file, '_blank');
          setTimeout(function() {
            window.location.reload();
          }, 2000);

        });
    } catch (error) {
      console.error("error in callPdfApi")
      console.error(error.message);
      console.error(error.cause);
    }
  }

  function replaceContentsWithSpinner(id) {
    $("#" + id).html(`
      <div class="modal-body d-flex justify-content-center">
        <div class="spinner-border" role="status"  style="width: 5rem; height: 5rem;"></div>
      </div>
    `);
  }

  function submitFromDeckForm() {
    var input = $('#deck_url').val();
    console.log(input);
    replaceContentsWithSpinner("byDeckUrlModalContent");
    var valid = validateDeckUrl(input);
    console.log("valid: " + valid);
    if (valid) {
      const url = "/from_deck?" + new URLSearchParams({
        deck_url: input
      });
      callPdfApi(url);
    } else {
      alert("ArkhamDB Deck URL is not valid");
    }
  }

  function validateDeckUrl(input) {
    // expected input looks like this:  https://arkhamdb.com/decklist/view/48985
    return new RegExp('https://arkhamdb.com/decklist/view/').test(input);
  }
</script>